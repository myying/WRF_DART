#!/bin/bash
. $WORK/WRF_DART/util.sh
rundir=$1/run

if [ ! -d $rundir ]; then echo "$rundir doesn't exist"; exit; fi

for t in `ls $rundir |grep 20 |tail -n5`; do
  echo "==== `wrf_time_string $t` ===="

for c in obsproc icbc dart perturb_ic wrf_ens wrf; do
  if [ -d $rundir/$t/$c ]; then
     stat=`cat $rundir/$t/$c/stat`
     printf "%12s" "$c"
     case $stat in
         waiting) echo -e "\e[7;33mwaiting\e[0m" ;;
         running) echo -e "\e[7;32mrunning\e[0m" ;;
         complete) echo -e "\e[7mcomplete\e[0m" ;;
         error) echo -e "\e[7;31merror\e[0m" ;;
     esac
     if [[ $stat == "running" ]]; then
       case $c in
         icbc)
           if [ -f $rundir/$t/$c/geogrid.log ]; then
             echo -e "\e[7mgeogrid\e[0m"
             echo "`cat $rundir/$t/$c/geogrid.log |tail -n5`"
           fi
           if [ -f $rundir/$t/$c/ungrib.log ]; then
             echo -e "\e[7mungrib\e[0m"
             echo "`cat $rundir/$t/$c/ungrib.log |tail -n5`"
           fi
           if [ -f $rundir/$t/$c/metgrid.log ]; then
             echo -e "\e[7mmetgrid\e[0m"
             echo "`cat $rundir/$t/$c/metgrid.log |tail -n5`"
           fi
           if [ -f $rundir/$t/$c/rsl.error.0000 ]; then
             echo -e "\e[7mreal\e[0m"
             echo "`cat $rundir/$t/$c/rsl.error.0000 |tail -n5`"
           fi
           ;;
         wrf)
           echo "`tail -n5 $rundir/$t/$c/rsl.error.0000`"
           ;;
         obsproc)
           echo "`tail -n5 $rundir/$t/$c/obsproc.log`"
           ;;
         perturb_ic)
           for m in `ls $rundir/$t/$c/$n |grep 0`; do
             echo "$m (`tail -n1 $rundir/$t/$c/$n/$m/rsl.error.0000`)"
           done
           ;;
         dart)
           echo "`tail -n15 $rundir/$t/$c/filter.log`"
           ;;
         wrf_ens)
           for m in `/bin/ls $rundir/$t/$c |grep '^[0-9][0-9][0-9]$'`; do
             rsltail=''
             if [[ -f $rundir/$t/$c/$m/rsl.error.0000 ]]; then
               rsltail=`tail -n1 $rundir/$t/$c/$m/rsl.error.0000`
             fi
             if [[ -z $rsltail ]]; then mstat="\e[0;31mwaiting\e[0m"; fi
             if [[ $rsltail ]]; then mstat="\e[0;32mrunning\e[0m: $rsltail"; fi
             if [[ `echo $rsltail |grep SUCCESS` ]]; then mstat=complete; fi
             echo -e "$m ($mstat)"
           done
           for i in `/bin/ls $rundir/$t/$c |grep mean`; do
             if [ -d $rundir/$t/$c/$i ]; then
               echo -e "\e[7mCalculating $i\e[0m"
               if [ -f $rundir/$t/$c/$i/ensemble_mean.log ]; then
                 tail -n5 $rundir/$t/$c/$i/ensemble_mean.log
               fi
             fi
           done
           ;;
       esac
     fi
  fi
  done
  echo ""
done

date
